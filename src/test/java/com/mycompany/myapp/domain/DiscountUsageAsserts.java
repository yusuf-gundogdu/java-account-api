package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DiscountUsageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUsageAllPropertiesEquals(DiscountUsage expected, DiscountUsage actual) {
        assertDiscountUsageAutoGeneratedPropertiesEquals(expected, actual);
        assertDiscountUsageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUsageAllUpdatablePropertiesEquals(DiscountUsage expected, DiscountUsage actual) {
        assertDiscountUsageUpdatableFieldsEquals(expected, actual);
        assertDiscountUsageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUsageAutoGeneratedPropertiesEquals(DiscountUsage expected, DiscountUsage actual) {
        assertThat(expected)
            .as("Verify DiscountUsage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUsageUpdatableFieldsEquals(DiscountUsage expected, DiscountUsage actual) {
        assertThat(expected)
            .as("Verify DiscountUsage relevant properties")
            .satisfies(e -> assertThat(e.getUsageDate()).as("check usageDate").isEqualTo(actual.getUsageDate()))
            .satisfies(e ->
                assertThat(e.getTotalDiscountAmount()).as("check totalDiscountAmount").isEqualTo(actual.getTotalDiscountAmount())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDiscountUsageUpdatableRelationshipsEquals(DiscountUsage expected, DiscountUsage actual) {
        // empty method
    }
}
