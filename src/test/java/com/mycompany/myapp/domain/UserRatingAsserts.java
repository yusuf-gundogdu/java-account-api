package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserRatingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserRatingAllPropertiesEquals(UserRating expected, UserRating actual) {
        assertUserRatingAutoGeneratedPropertiesEquals(expected, actual);
        assertUserRatingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserRatingAllUpdatablePropertiesEquals(UserRating expected, UserRating actual) {
        assertUserRatingUpdatableFieldsEquals(expected, actual);
        assertUserRatingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserRatingAutoGeneratedPropertiesEquals(UserRating expected, UserRating actual) {
        assertThat(expected)
            .as("Verify UserRating auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserRatingUpdatableFieldsEquals(UserRating expected, UserRating actual) {
        assertThat(expected)
            .as("Verify UserRating relevant properties")
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()))
            .satisfies(e -> assertThat(e.getReviewDate()).as("check reviewDate").isEqualTo(actual.getReviewDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserRatingUpdatableRelationshipsEquals(UserRating expected, UserRating actual) {
        assertThat(expected)
            .as("Verify UserRating relationships")
            .satisfies(e -> assertThat(e.getCompany()).as("check company").isEqualTo(actual.getCompany()));
    }
}
